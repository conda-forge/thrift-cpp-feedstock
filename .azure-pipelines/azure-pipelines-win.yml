# This file was generated automatically from conda-smithy. To update this configuration,
# update the conda-forge.yml and/or the recipe/meta.yaml.
# -*- mode: yaml -*-

jobs:
- job: win
  pool:
    name: Hosted Windows 2019 with VS2019
  timeoutInMinutes: 240
  strategy:
    maxParallel: 4
    matrix:
      win_c_compilervs2015cxx_compilervs2015vc14:
        CONFIG: win_c_compilervs2015cxx_compilervs2015vc14
        CONDA_BLD_PATH: D:\\bld\\
        UPLOAD_PACKAGES: False
  steps:
    # TODO: Fast finish on azure pipelines?
    - script: |
        ECHO ON
        

    - script: |
        choco install vcpython27 -fdv -y --debug
      condition: contains(variables['CONFIG'], 'vs2008')
      displayName: Install vcpython27.msi (if needed)

    # Cygwin's git breaks conda-build. (See https://github.com/conda-forge/conda-smithy-feedstock/pull/2.)
    # - script: rmdir C:\cygwin /s /q
    #   continueOnError: true

    - powershell: |
        Set-PSDebug -Trace 1

        $batchcontent = @"
        ECHO ON
        SET vcpython=C:\Program Files (x86)\Common Files\Microsoft\Visual C++ for Python\9.0

        DIR "%vcpython%"

        CALL "%vcpython%\vcvarsall.bat" %*
        "@

        $batchDir = "C:\Program Files (x86)\Common Files\Microsoft\Visual C++ for Python\9.0\VC"
        $batchPath = "$batchDir" + "\vcvarsall.bat"
        New-Item -Path $batchPath -ItemType "file" -Force

        Set-Content -Value $batchcontent -Path $batchPath

        Get-ChildItem -Path $batchDir

        Get-ChildItem -Path ($batchDir + '\..')

      condition: contains(variables['CONFIG'], 'vs2008')
      displayName: Patch vs2008 (if needed)

    - powershell: |
        try 
        {
          Write-Host "Downloading Bootstrapper ..."
          $VSBootstrapperURL = 'https://aka.ms/vs/16/pre/vs_Enterprise.exe'
          Invoke-WebRequest -Uri $VSBootstrapperURL -OutFile "${env:Temp}\vs_Enterprise.exe"

          Get-ChildItem -Path "C:\Program Files (x86)\Microsoft Visual Studio\2019"

          $FilePath = "${env:Temp}\vs_Enterprise.exe"
          $WorkLoads = '--installPath "C:\Program Files (x86)\Microsoft Visual Studio\2019\Preview" ' + `
                          '--add Microsoft.VisualStudio.Component.VC.v14 '
          $Arguments = ('/c', $FilePath, 'modify', $WorkLoads, '--quiet', '--norestart', '--wait', '--nocache' )

          Write-Host "Starting Install ..."
          $process = Start-Process -FilePath cmd.exe -ArgumentList $Arguments -Wait -PassThru
          $exitCode = $process.ExitCode

          if ($exitCode -eq 0 -or $exitCode -eq 3010)
          {
            Write-Host -Object 'Installation successful'
            return $exitCode
          }
          else
          {
            Write-Host -Object "Non zero exit code returned by the installation process : $exitCode."

            # this wont work because of log size limitation in extension manager
            # Get-Content $customLogFilePath | Write-Host

            $files = Get-ChildItem -Path ${env:Temp} -Filter dd*.log
            foreach ($f in $files){
              Write-Host "Reading Log output" + $f_.FullName
              Write-Host "================================="
              $content = Get-Content -Path $f.FullName
              foreach ($line in $content) {
                Write-Host $line
              }
            }
            
            exit $exitCode
          }
        } 
        catch 
        {
          Write-Host -Object "Failed to install Visual Studio. Check the logs for details in "
          Write-Host -Object $_.Exception.Message
          exit -1
        }
      displayName: Install VC14

    - task: CondaEnvironment@1
      inputs:
        packageSpecs: 'python=3.6 conda-build conda conda-forge::conda-forge-ci-setup=2' # Optional
        installOptions: "-c conda-forge"
        updateConda: false
      displayName: Install conda-build and activate environment

    - script: set PYTHONUNBUFFERED=1

    # Configure the VM
    - script: setup_conda_rc .\ .\recipe .\.ci_support\%CONFIG%.yaml
    
    # Configure the VM.
    - script: |
        run_conda_forge_build_setup

      displayName: conda-forge build setup
    

    # Special cased version setting some more things!
    - script: |
        conda.exe build recipe -m .ci_support\%CONFIG%.yaml --debug
      displayName: Build recipe (vs2008)
      env:
        VS90COMNTOOLS: "C:\\Program Files (x86)\\Common Files\\Microsoft\\Visual C++ for Python\\9.0\\VC\\bin"
        PYTHONUNBUFFERED: 1
      condition: contains(variables['CONFIG'], 'vs2008')

    - script: |
        conda.exe build recipe -m .ci_support\%CONFIG%.yaml --debug
      displayName: Build recipe
      env:
        PYTHONUNBUFFERED: 1
        VS140COMNTOOLS: "C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Preview\\Common7\\Tools"
        VS141COMNTOOLS: "C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Preview\\Common7\\Tools"
      condition: not(contains(variables['CONFIG'], 'vs2008'))

    - script: |
        upload_package .\ .\recipe .ci_support\%CONFIG%.yaml
      env:
        BINSTAR_TOKEN: $(BINSTAR_TOKEN)
      condition: not(eq(variables['UPLOAD_PACKAGES'], 'False'))
